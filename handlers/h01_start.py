from aiogram import Router
from aiogram.types import Message
from aiogram.filters import CommandStart
from states.creator import Creator
from aiogram.fsm.context import FSMContext
from settings_ai.settings import ask

router = Router()


@router.message(CommandStart())
async def start(message: Message):
    """–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    await message.answer("–Ø –≥–æ—Ç–æ–≤ –¥–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å\n–ù–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ üëá")


@router.message(Creator.wait)
async def stop_flood(message: Message):
    """–∑–∞—â–∏—Ç–∞ –æ—Ç —Ñ–ª—É–¥–∞"""
    await message.answer("–í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è,\n–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ üòä")


@router.message()
async def generate(message: Message, state: FSMContext):
    """–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    await state.set_state(Creator.wait)
    response = await ask(message.text)
    await message.answer(response)
    await state.clear()
